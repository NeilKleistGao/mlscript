:NewParser
:NewDefs
:NoJS
:AllowTypeErrors
fun getString(x: (((string) | (number)) | (false)) | (true)): string
fun test(x: (false) | (true)): (string) | (number)
fun run(f: ((number) => number) | ((number) => string)): anything
fun get(arr: (MutArray<number>) | (MutArray<string>)): unit
fun get2(t: ((string, string, )) | ((number, string, ))): string
fun typeVar<T, U>(x: (T) | (U)): (T) | (U)
fun uuuu(x: (((string) | (number)) | (false)) | (true)): (((string) | (number)) | (false)) | (true)
//│ ╔══[ERROR] Type parameters here are not yet supported in this position
//│ ║  l.10: 	fun typeVar<T, U>(x: (T) | (U)): (T) | (U)
//│ ╙──      	            ^
//│ ╔══[ERROR] type identifier not found: T
//│ ║  l.10: 	fun typeVar<T, U>(x: (T) | (U)): (T) | (U)
//│ ╙──      	                     ^^^
//│ ╔══[ERROR] type identifier not found: U
//│ ║  l.10: 	fun typeVar<T, U>(x: (T) | (U)): (T) | (U)
//│ ╙──      	                           ^^^
//│ ╔══[ERROR] type identifier not found: T
//│ ║  l.10: 	fun typeVar<T, U>(x: (T) | (U)): (T) | (U)
//│ ╙──      	                                 ^^^
//│ ╔══[ERROR] type identifier not found: U
//│ ║  l.10: 	fun typeVar<T, U>(x: (T) | (U)): (T) | (U)
//│ ╙──      	                                       ^^^
//│ fun getString: (x: false | number | string | true,) -> string
//│ fun test: (x: bool,) -> (number | string)
//│ fun run: (f: number -> (number | string),) -> anything
//│ fun get: (arr: MutArray[out number | string],) -> unit
//│ fun get2: (t: (number | string, string,),) -> string
//│ fun typeVar: (x: error,) -> error
//│ fun uuuu: (x: false | number | string | true,) -> (false | number | string | true)
