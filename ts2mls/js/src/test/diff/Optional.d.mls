:NewParser
:ParseOnly
fun buildName(_: string, _: (string) | (undefined)): string
fun buildName2(_: string, _: (string) | (undefined)): string
fun buildName3(_: string, _: MutArray<string>): string
fun buildName4(_: string, _: MutArray<anything>): string
trait SquareConfig() {
  let color: (string) | (undefined)
  let width: (number) | (undefined)
}
fun did(_: number, _: (number => number) | (undefined)): number
fun getOrElse(_: (MutArray<object>) | (undefined)): object
class ABC() {}
fun testABC(_: (ABC) | (undefined)): unit
fun testSquareConfig(_: (SquareConfig) | (undefined)): unit
fun err(_: ((number, string, )) | (undefined)): unit
fun toStr(_: ((number) | (bool)) | (undefined)): string
fun boo<T, U>(_: ((T) & (U)) | (undefined)): unit
class B<T>() {
  let b: T
}
fun boom(_: (B<nothing>) | (undefined)): anything
//│ |#fun| |buildName|(|_|#:| |string|,| |_|#:| |(|string|)| ||| |(|undefined|)|)|#:| |string|↵|#fun| |buildName2|(|_|#:| |string|,| |_|#:| |(|string|)| ||| |(|undefined|)|)|#:| |string|↵|#fun| |buildName3|(|_|#:| |string|,| |_|#:| |MutArray|‹|string|›|)|#:| |string|↵|#fun| |buildName4|(|_|#:| |string|,| |_|#:| |MutArray|‹|anything|›|)|#:| |string|↵|#trait| |SquareConfig|(||)| |{|→|#let| |color|#:| |(|string|)| ||| |(|undefined|)|↵|#let| |width|#:| |(|number|)| ||| |(|undefined|)|←|↵|}|↵|#fun| |did|(|_|#:| |number|,| |_|#:| |(|number| |=>| |number|)| ||| |(|undefined|)|)|#:| |number|↵|#fun| |getOrElse|(|_|#:| |(|MutArray|‹|object|›|)| ||| |(|undefined|)|)|#:| |object|↵|#class| |ABC|(||)| |{||}|↵|#fun| |testABC|(|_|#:| |(|ABC|)| ||| |(|undefined|)|)|#:| |unit|↵|#fun| |testSquareConfig|(|_|#:| |(|SquareConfig|)| ||| |(|undefined|)|)|#:| |unit|↵|#fun| |err|(|_|#:| |(|(|number|,| |string|,| |)|)| ||| |(|undefined|)|)|#:| |unit|↵|#fun| |toStr|(|_|#:| |(|(|number|)| ||| |(|bool|)|)| ||| |(|undefined|)|)|#:| |string|↵|#fun| |boo|‹|T|,| |U|›|(|_|#:| |(|(|T|)| |&| |(|U|)|)| ||| |(|undefined|)|)|#:| |unit|↵|#class| |B|‹|T|›|(||)| |{|→|#let| |b|#:| |T|←|↵|}|↵|#fun| |boom|(|_|#:| |(|B|‹|nothing|›|)| ||| |(|undefined|)|)|#:| |anything|
//│ Parsed: {fun buildName: [] -> (_: string, _: (string,) | (undefined,),) -> string; fun buildName2: [] -> (_: string, _: (string,) | (undefined,),) -> string; fun buildName3: [] -> (_: string, _: MutArray[string],) -> string; fun buildName4: [] -> (_: string, _: MutArray[anything],) -> string; trait SquareConfig(): {let color: [] -> (string,) | (undefined,); let width: [] -> (number,) | (undefined,)}; fun did: [] -> (_: number, _: (number -> number,) | (undefined,),) -> number; fun getOrElse: [] -> (_: (MutArray[object],) | (undefined,),) -> object; class ABC() {}; fun testABC: [] -> (_: (ABC,) | (undefined,),) -> unit; fun testSquareConfig: [] -> (_: (SquareConfig,) | (undefined,),) -> unit; fun err: [] -> (_: ((number, string,),) | (undefined,),) -> unit; fun toStr: [] -> (_: ((number,) | (bool,),) | (undefined,),) -> string; fun boo: [] -> (_: ((T,) & (U,),) | (undefined,),) -> unit; class B[T]() {let b: [] -> T}; fun boom: [] -> (_: (B[nothing],) | (undefined,),) -> anything}
