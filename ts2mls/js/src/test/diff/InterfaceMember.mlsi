export declare module InterfaceMember {
  trait IFoo {
    val a: string
    fun b(x: number): number
    fun c(): (false) | (true)
    fun d(x: string): unit
  }
  trait II<T> {
    fun test(x: T): number
  }
  fun create(): {v: number,}
  fun get(x: {t: string,}): string
  trait IEvent {
    fun callback(): (number) => unit
  }
  trait SearchFunc {
    val __call: Unsupported<"(source: string, subString: string): boolean;", "ts2mls/js/src/test/typescript/InterfaceMember.ts", 24, 22>
  }
  trait StringArray {
    val __index: Unsupported<"[index: number]: string;", "ts2mls/js/src/test/typescript/InterfaceMember.ts", 28, 23>
  }
  trait Counter {
    val __call: Unsupported<"(start: number): string;", "ts2mls/js/src/test/typescript/InterfaceMember.ts", 32, 19>
    val interval: number
    fun reset(): unit
  }
  trait Simple {
    val a: number
    fun b(x: (false) | (true)): string
  }
  trait Simple2<T> {
    val abc: T
  }
  trait Next extends Simple {}
  trait TTT<T> {
    fun ttt(x: T): T
  }
}
