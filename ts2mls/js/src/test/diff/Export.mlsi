:NewParser
:NewDefs
:NoJS
:AllowTypeErrors
export declare module Foo {
  export fun Baz(aa: string): IBar
  declare trait IBar() {
    let a: string
  }
  declare class Bar() extends IBar {
    let a: string
  }
  let baz: IBar
}
//│ ╔══[ERROR] type identifier not found: IBar
//│ ║  l.6: 	  export fun Baz(aa: string): IBar
//│ ╙──     	                              ^^^^
//│ ╔══[ERROR] traits are not yet supported
//│ ║  l.7: 	  declare trait IBar() {
//│ ║       	          ^^^^^^^^^^^^^^
//│ ║  l.8: 	    let a: string
//│ ║       	^^^^^^^^^^^^^^^^^
//│ ║  l.9: 	  }
//│ ╙──     	^^^
//│ ╔══[ERROR] Cannot inherit from a type alias
//│ ║  l.10: 	  declare class Bar() extends IBar {
//│ ╙──      	                              ^^^^
//│ ╔══[ERROR] trait IBar cannot be used as a type
//│ ║  l.13: 	  let baz: IBar
//│ ╙──      	           ^^^^
//│ module Foo() {
//│   class Bar() {
//│     let a: string
//│   }
//│   fun Baz: (aa: string,) -> error
//│   trait IBar()
//│   let baz: IBar
//│ }
