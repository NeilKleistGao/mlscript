:NewParser
:NewDefs
:NoJS
:AllowTypeErrors
fun multi1(x: number): number
fun multi3(): unit
declare class Foo() extends Base {}
declare trait AnotherBase() {
  let y: string
}
declare module N {
  fun f(): unit
  fun g(): unit
  fun h(): unit
}
fun multi2(x: string): string
fun multi4(): unit
declare trait Base() {
  let a: number
}
declare class AnotherFoo() extends AnotherBase {}
fun multi5(): unit
//│ ╔══[ERROR] traits are not yet supported
//│ ║  l.18: 	declare trait Base() {
//│ ║        	        ^^^^^^^^^^^^^^
//│ ║  l.19: 	  let a: number
//│ ║        	^^^^^^^^^^^^^^^
//│ ║  l.20: 	}
//│ ╙──      	^
//│ ╔══[ERROR] Cannot inherit from a type alias
//│ ║  l.7: 	declare class Foo() extends Base {}
//│ ╙──     	                            ^^^^
//│ ╔══[ERROR] traits are not yet supported
//│ ║  l.8: 	declare trait AnotherBase() {
//│ ║       	        ^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.9: 	  let y: string
//│ ║       	^^^^^^^^^^^^^^^
//│ ║  l.10: 	}
//│ ╙──      	^
//│ ╔══[ERROR] Cannot inherit from a type alias
//│ ║  l.21: 	declare class AnotherFoo() extends AnotherBase {}
//│ ╙──      	                                   ^^^^^^^^^^^
//│ fun multi1: (x: number,) -> number
//│ fun multi3: () -> unit
//│ class Foo()
//│ trait AnotherBase()
//│ module N() {
//│   fun f: () -> unit
//│   fun g: () -> unit
//│   fun h: () -> unit
//│ }
//│ fun multi2: (x: string,) -> string
//│ fun multi4: () -> unit
//│ trait Base()
//│ class AnotherFoo()
//│ fun multi5: () -> unit
