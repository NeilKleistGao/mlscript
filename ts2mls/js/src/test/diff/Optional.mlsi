export declare module Optional {
  fun buildName(firstName: Str, lastName: (Str) | (undefined)): Str
  fun buildName2(firstName: Str, lastName: (Str) | (undefined)): Str
  fun buildName3(firstName: Str, lastName: MutArray<Str>): Str
  fun buildName4(firstName: Str, lastName: MutArray<anything>): Str
  declare trait SquareConfig {
    val color: (Str) | (undefined)
    val width: (Num) | (undefined)
  }
  fun did(x: Num, f: ((x: Num) => Num) | (undefined)): Num
  fun getOrElse(arr: (MutArray<Object>) | (undefined)): Object
  declare class ABC {}
  fun testABC(abc: (ABC) | (undefined)): unit
  fun testSquareConfig(conf: (SquareConfig) | (undefined)): unit
  fun err(msg: ((Num, Str, )) | (undefined)): unit
  fun toStr(x: (((Num) | (false)) | (true)) | (undefined)): Str
  fun boo<T, U>(x: ((T) & (U)) | (undefined)): unit
  declare class B<T> {
    val b: T
  }
  fun boom(b: (B<nothing>) | (undefined)): anything
}
