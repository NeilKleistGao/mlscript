:NewParser
:ParseOnly
class Student {
  let name: string
  let isFriend: Student => bool
  let addScore: string => number => unit
  let getID: unit => number
}
class Foo<T> {
  let bar: T => unit
}
class EZ {
  let inc: number => number
}
class Outer {}
class TTT<T> {
  let ttt: T => T
  let ttt2: T => T
}
//│ |#class| |Student| |{|→|#let| |name|#:| |string|↵|#let| |isFriend|#:| |Student| |=>| |bool|↵|#let| |addScore|#:| |string| |=>| |number| |=>| |unit|↵|#let| |getID|#:| |unit| |=>| |number|←|↵|}|↵|#class| |Foo|‹|T|›| |{|→|#let| |bar|#:| |T| |=>| |unit|←|↵|}|↵|#class| |EZ| |{|→|#let| |inc|#:| |number| |=>| |number|←|↵|}|↵|#class| |Outer| |{||}|↵|#class| |TTT|‹|T|›| |{|→|#let| |ttt|#:| |T| |=>| |T|↵|#let| |ttt2|#:| |T| |=>| |T|←|↵|}|
//│ Parsed: {class Student() {let name: [] -> string; let isFriend: [] -> Student -> bool; let addScore: [] -> string -> number -> unit; let getID: [] -> unit -> number}; class Foo[T]() {let bar: [] -> T -> unit}; class EZ() {let inc: [] -> number -> number}; class Outer() {}; class TTT[T]() {let ttt: [] -> T -> T; let ttt2: [] -> T -> T}}
