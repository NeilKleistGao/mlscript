:NewParser
:ParseOnly
namespace N1 {
  let f: anything => number
  let ff: anything => number
  class N1'C(f: unit => unit)
  trait N1'I(f: unit => number)
  namespace N2 {
    let fff: bool => number
    let gg: N1'C => N1'C
    class N1'N2'BBB: N1'C
  }
}
namespace AA {
  let f: anything => string
  class AA'C(f: unit => unit)
  trait AA'I(f: unit => number)
  namespace N2 {
  }
}
let f1: N1'C => N1'C
let f2: AA'C => AA'C
//│ |#namespace| |N1| |{|→|#let| |f|#:| |anything| |=>| |number|↵|#let| |ff|#:| |anything| |=>| |number|↵|#class| |N1'C|(|f|#:| |unit| |=>| |unit|)|↵|#trait| |N1'I|(|f|#:| |unit| |=>| |number|)|↵|#namespace| |N2| |{|→|#let| |fff|#:| |bool| |=>| |number|↵|#let| |gg|#:| |N1'C| |=>| |N1'C|↵|#class| |N1'N2'BBB|#:| |N1'C|←|↵|}|←|↵|}|↵|#namespace| |AA| |{|→|#let| |f|#:| |anything| |=>| |string|↵|#class| |AA'C|(|f|#:| |unit| |=>| |unit|)|↵|#trait| |AA'I|(|f|#:| |unit| |=>| |number|)|↵|#namespace| |N2| |{|↵|}|←|↵|}|↵|#let| |f1|#:| |N1'C| |=>| |N1'C|↵|#let| |f2|#:| |AA'C| |=>| |AA'C|
//│ Parsed: {namespace N1(): {fun f: [] -> anything -> number; fun ff: [] -> anything -> number; class N1'C(f: unit, => unit,) {}; trait N1'I(f: unit, => number,): {}; namespace N2(): {fun fff: [] -> bool -> number; fun gg: [] -> N1'C -> N1'C; class N1'N2'BBB(): N1'C {}}}; namespace AA(): {fun f: [] -> anything -> string; class AA'C(f: unit, => unit,) {}; trait AA'I(f: unit, => number,): {}; namespace N2(): {}}; fun f1: [] -> N1'C -> N1'C; fun f2: [] -> AA'C -> AA'C}
