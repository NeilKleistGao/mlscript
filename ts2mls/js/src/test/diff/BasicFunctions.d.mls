:NewParser
:ParseOnly
let hello: unit => unit
let add: number => number => number
let sub: number => number => number
let foo: unit => number
let id: anything => anything
let odd: number => bool
let isnull: anything => bool
let bar: unit => anything
let nu: null => null
let un: undefined => undefined
let fail: unit => nothing
let create: unit => object
let pa: number => number
let wtf: anything => unit
class Foooooo {
  let ooooooo: number
}
let inn: Foooooo => unit
let out: unit => Foooooo
trait Barrrrrrrrr {
  let rrrrrrr: number
}
let inn2: Barrrrrrrrr => unit
let out2: unit => Barrrrrrrrr
//│ |#let| |hello|#:| |unit| |=>| |unit|↵|#let| |add|#:| |number| |=>| |number| |=>| |number|↵|#let| |sub|#:| |number| |=>| |number| |=>| |number|↵|#let| |foo|#:| |unit| |=>| |number|↵|#let| |id|#:| |anything| |=>| |anything|↵|#let| |odd|#:| |number| |=>| |bool|↵|#let| |isnull|#:| |anything| |=>| |bool|↵|#let| |bar|#:| |unit| |=>| |anything|↵|#let| |nu|#:| |null| |=>| |null|↵|#let| |un|#:| |undefined| |=>| |undefined|↵|#let| |fail|#:| |unit| |=>| |nothing|↵|#let| |create|#:| |unit| |=>| |object|↵|#let| |pa|#:| |number| |=>| |number|↵|#let| |wtf|#:| |anything| |=>| |unit|↵|#class| |Foooooo| |{|→|#let| |ooooooo|#:| |number|←|↵|}|↵|#let| |inn|#:| |Foooooo| |=>| |unit|↵|#let| |out|#:| |unit| |=>| |Foooooo|↵|#trait| |Barrrrrrrrr| |{|→|#let| |rrrrrrr|#:| |number|←|↵|}|↵|#let| |inn2|#:| |Barrrrrrrrr| |=>| |unit|↵|#let| |out2|#:| |unit| |=>| |Barrrrrrrrr|
//│ Parsed: {let hello: [] -> unit -> unit; let add: [] -> number -> number -> number; let sub: [] -> number -> number -> number; let foo: [] -> unit -> number; let id: [] -> anything -> anything; let odd: [] -> number -> bool; let isnull: [] -> anything -> bool; let bar: [] -> unit -> anything; let nu: [] -> null -> null; let un: [] -> undefined -> undefined; let fail: [] -> unit -> nothing; let create: [] -> unit -> object; let pa: [] -> number -> number; let wtf: [] -> anything -> unit; class Foooooo() {let ooooooo: [] -> number}; let inn: [] -> Foooooo -> unit; let out: [] -> unit -> Foooooo; trait Barrrrrrrrr(): {let rrrrrrr: [] -> number}; let inn2: [] -> Barrrrrrrrr -> unit; let out2: [] -> unit -> Barrrrrrrrr}
