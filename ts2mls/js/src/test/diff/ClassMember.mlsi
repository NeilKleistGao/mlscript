:NewParser
:NewDefs
:NoJS
:AllowTypeErrors
export declare module ClassMember {
  class Student(s: string, age: number) {
    val name: string
    fun isFriend(other: Student): (false) | (true)
    fun addScore(sub: string, score: number): unit
    fun getID(): number
  }
  class Foo<T>() {
    fun bar(x: T): unit
  }
  class EZ() {
    fun inc(x: number): number
  }
  class Outer() {
    class Inner() {
      val a: number
    }
  }
  class TTT<T>() {
    fun ttt(x: T): T
    fun ttt2(x: T): T
  }
}
//│ ╔══[ERROR] Member isFriend is declared but not defined
//│ ║  l.8: 	    fun isFriend(other: Student): (false) | (true)
//│ ╙──     	        ^^^^^^^^
//│ ╔══[ERROR] Member addScore is declared but not defined
//│ ║  l.9: 	    fun addScore(sub: string, score: number): unit
//│ ╙──     	        ^^^^^^^^
//│ ╔══[ERROR] Member getID is declared but not defined
//│ ║  l.10: 	    fun getID(): number
//│ ╙──      	        ^^^^^
//│ ╔══[ERROR] Member bar is declared but not defined
//│ ║  l.13: 	    fun bar(x: T): unit
//│ ╙──      	        ^^^
//│ ╔══[ERROR] Member inc is declared but not defined
//│ ║  l.16: 	    fun inc(x: number): number
//│ ╙──      	        ^^^
//│ ╔══[ERROR] Member ttt is declared but not defined
//│ ║  l.24: 	    fun ttt(x: T): T
//│ ╙──      	        ^^^
//│ ╔══[ERROR] Member ttt2 is declared but not defined
//│ ║  l.25: 	    fun ttt2(x: T): T
//│ ╙──      	        ^^^^
//│ module ClassMember() {
//│   class EZ() {
//│     fun inc: (x: number,) -> number
//│   }
//│   class Foo[T]() {
//│     fun bar: (x: T,) -> unit
//│   }
//│   class Outer() {
//│     class Inner() {
//│       let a: number
//│     }
//│   }
//│   class Student(s: string, age: number) {
//│     fun addScore: (sub: string, score: number,) -> unit
//│     fun getID: () -> number
//│     fun isFriend: (other: Student,) -> bool
//│     let name: string
//│   }
//│   class TTT[T]() {
//│     fun ttt: (x: T,) -> T
//│     fun ttt2: (x: T,) -> T
//│   }
//│ }
