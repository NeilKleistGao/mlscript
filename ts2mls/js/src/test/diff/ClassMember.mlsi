:NewParser
:NewDefs
:NoJS
:AllowTypeErrors
declare class Student(s: string, age: number) {
  let name: string
  fun isFriend(other: Student): (false) | (true)
  fun addScore(sub: string, score: number): unit
  fun getID(): number
}
declare class Foo<T>() {
  fun bar(x: T): unit
}
declare class EZ() {
  fun inc(x: number): number
}
declare class Outer() {
  declare class Inner() {
    let a: number
  }
}
declare class TTT<T>() {
  fun ttt(x: T): T
  fun ttt2(x: T): T
}
//│ class Student(s: string, age: number) {
//│   fun addScore: (sub: string, score: number,) -> unit
//│   fun getID: () -> number
//│   fun isFriend: (other: Student,) -> bool
//│   let name: string
//│ }
//│ class Foo[T]() {
//│   fun bar: (x: T,) -> unit
//│ }
//│ class EZ() {
//│   fun inc: (x: number,) -> number
//│ }
//│ class Outer() {
//│   class Inner() {
//│     let a: number
//│   }
//│ }
//│ class TTT[T]() {
//│   fun ttt: (x: T,) -> T
//│   fun ttt2: (x: T,) -> T
//│ }
