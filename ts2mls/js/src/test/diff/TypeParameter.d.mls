:NewParser
:ParseOnly
fun inc<T>(x: T): number
class CC<T>() {
  fun print(s: T): unit
}
fun con<U, T>(t: T): U
class Printer<T>() {
  fun print(t: T): unit
}
fun setStringPrinter(p: Printer<string>): unit
fun getStringPrinter(): Printer<string>
fun foo<T>(p: Printer<T>, x: T): T
fun foo2<T>(p: Printer<T>, x: T): T
class F<T>() {
  x: {mut contents: T}
  fun GG<U>(y: U): T
}
trait I<T>() {
  x: {mut contents: T}
  fun GG<U>(y: U): T
}
class FFF<T>() {
  fun fff(x: T): unit
}
fun fff(p: FFF<string>, s: string): unit
fun getFFF(): FFF<number>
//│ |#fun| |inc|‹|T|›|(|x|#:| |T|)|#:| |number|↵|#class| |CC|‹|T|›|(||)| |{|→|#fun| |print|(|s|#:| |T|)|#:| |unit|←|↵|}|↵|#fun| |con|‹|U|,| |T|›|(|t|#:| |T|)|#:| |U|↵|#class| |Printer|‹|T|›|(||)| |{|→|#fun| |print|(|t|#:| |T|)|#:| |unit|←|↵|}|↵|#fun| |setStringPrinter|(|p|#:| |Printer|‹|string|›|)|#:| |unit|↵|#fun| |getStringPrinter|(||)|#:| |Printer|‹|string|›|↵|#fun| |foo|‹|T|›|(|p|#:| |Printer|‹|T|›|,| |x|#:| |T|)|#:| |T|↵|#fun| |foo2|‹|T|›|(|p|#:| |Printer|‹|T|›|,| |x|#:| |T|)|#:| |T|↵|#class| |F|‹|T|›|(||)| |{|→|x|#:| |{|#mut| |contents|#:| |T|}|↵|#fun| |GG|‹|U|›|(|y|#:| |U|)|#:| |T|←|↵|}|↵|#trait| |I|‹|T|›|(||)| |{|→|x|#:| |{|#mut| |contents|#:| |T|}|↵|#fun| |GG|‹|U|›|(|y|#:| |U|)|#:| |T|←|↵|}|↵|#class| |FFF|‹|T|›|(||)| |{|→|#fun| |fff|(|x|#:| |T|)|#:| |unit|←|↵|}|↵|#fun| |fff|(|p|#:| |FFF|‹|string|›|,| |s|#:| |string|)|#:| |unit|↵|#fun| |getFFF|(||)|#:| |FFF|‹|number|›|
//│ Parsed: {fun inc: [] -> (x: T,) -> number; class CC‹T›() {fun print: [] -> (s: T,) -> unit}; fun con: [] -> (t: T,) -> U; class Printer‹T›() {fun print: [] -> (t: T,) -> unit}; fun setStringPrinter: [] -> (p: Printer[string],) -> unit; fun getStringPrinter: [] -> () -> Printer[string]; fun foo: [] -> (p: Printer[T], x: T,) -> T; fun foo2: [] -> (p: Printer[T], x: T,) -> T; class F‹T›() {x : Record(List((contents,Field(Some(TypeName(T)),TypeName(T))))); fun GG: [] -> (y: U,) -> T}; trait I‹T›() {x : Record(List((contents,Field(Some(TypeName(T)),TypeName(T))))); fun GG: [] -> (y: U,) -> T}; class FFF‹T›() {fun fff: [] -> (x: T,) -> unit}; fun fff: [] -> (p: FFF[string], s: string,) -> unit; fun getFFF: [] -> () -> FFF[number]}
