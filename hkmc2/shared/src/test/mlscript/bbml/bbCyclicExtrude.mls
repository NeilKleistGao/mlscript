:global
:bbml



let f = (x => (x : [A] -> A -> A)) in f
//│ Type: (⊤ ->{⊥} ⊥) ->{⊥} forall α2_2: (α2_2) ->{⊥} α2_2

let f = ((x => x) : [A] -> A -> A) in f
//│ Type: forall α3_2: (α3_2) ->{⊥} α3_2

let foo = f => (x => f(x(x)) : [A] -> A -> A) in foo
//│ Type: (α9_1 ->{⊥} (⊤ ->{⊥} ⊥)) ->{⊥} (α5_1 ->{⊥} α9_1) ->{⊥} forall α6_2: (α6_2) ->{⊥} α6_2
//│ Where:
//│   α5_1 <: α5_1 ->{⊥} α9_1

f => (let g = x => x(x) in f(g(g))) : [A] -> A -> A
//│ Type: (⊥ ->{⊥} (⊤ ->{⊥} ⊥)) ->{⊥} forall α17_2: (α17_2) ->{⊥} α17_2

:e
f => (let g = x => f(x(x)) in g) : [A] -> A -> A
//│ ╔══[ERROR] Type error in reference with expected type (<α>27_2) ->{⊥} <α>27_2
//│ ║  l.21: 	f => (let g = x => f(x(x)) in g) : [A] -> A -> A
//│ ║        	                              ^
//│ ╟── because: cannot constrain  α28_2 ->{α31_2 ∨ α29_2} α32_2  <:  <α>27_2 ->{⊥} <α>27_2
//│ ╟── because: cannot constrain  ((⊤ ∧ ⊤) ∧ <α>27_2) ∨ ⊥  <:  ((⊤ ∧ ⊤) ∧ α28_2) ∨ ⊥
//│ ╟── because: cannot constrain  <α>27_2  <:  α28_2
//│ ╙── because: cannot constrain  <α>27_2  <:  (((⊤ ∧ ⊤) ∧ α28_2) ∨ ⊥) ->{((⊤ ∧ ⊤) ∧ α29_2) ∨ ⊥} (((⊤ ∧ ⊤) ∧ α30_2) ∨ ⊥)
//│ Type: (⊥ ->{⊥} ⊥) ->{⊥} forall α27_2: (α27_2) ->{⊥} α27_2

f => (x => f(x(x)) : [A] -> A -> A)
//│ Type: (α41_1 ->{⊥} (⊤ ->{⊥} ⊥)) ->{⊥} (α37_1 ->{⊥} α41_1) ->{⊥} forall α38_2: (α38_2) ->{⊥} α38_2
//│ Where:
//│   α37_1 <: α37_1 ->{⊥} α41_1

let foo = f => (f(x => x(x)) : [A] -> A -> A) in foo
//│ Type: (((α55_1 ->{α58_1} α57_1) ->{α58_1} α57_1) ->{⊥} (⊤ ->{⊥} ⊥)) ->{⊥} forall α49_2: (α49_2) ->{⊥} α49_2
//│ Where:
//│   α55_1 <: α55_1 ->{α58_1} α57_1

:todo
let foo(f) = (f(x => x(x)) : [A] -> A -> A) in foo
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing

:todo
fun foo(f) = (f(x => x(x)) : [A] -> A -> A)
//│ ╔══[ERROR] General type is not allowed here.
//│ ║  l.46: 	fun foo(f) = (f(x => x(x)) : [A] -> A -> A)
//│ ╙──      	        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ Type: ⊤


f => (let g = x => x(x) in let tmp = g(g) in f(g)) : [A] -> A -> A
//│ Type: ((((α86_1 ∨ (α86_1 ->{α89_1} α88_1)) ->{⊥} α88_1) ->{α89_1} α88_1) ->{⊥} (⊤ ->{⊥} ⊥)) ->{⊥} forall α80_2: (α80_2) ->{⊥} α80_2
//│ Where:
//│   α86_1 <: (α86_1 ∨ (α86_1 ->{α89_1} α88_1)) ->{⊥} α88_1


