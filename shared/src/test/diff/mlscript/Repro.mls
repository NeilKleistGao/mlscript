
class C
//│ Defined class C

:p
def n: C{}
//│ Parsed: rec def n: [] -> C; {};
//│ Desugared: rec def n: [] -> C
//│ Desugared: {}
//│ n: C
//│  = <missing implementation>
//│ res: anything
//│    = {}


// class G[A]: { a: G[A] & A & G[A] }
class G[A]: { a: G[A] }
//│ Defined class G

def g: G['a] & {a: 'a} as 'a
//│ g: {a: 'a} & G['a] as 'a
//│  = <missing implementation>

:NoJS

// rec def g2 a = G { a }
// :re
rec def g2 = G { a = g2 }
//│ g2: (G['A] with {a: 'a}) as 'a

// g = g2
// :d
// :re
g = g
//│ {a: 'a} & G['a] as 'a
//│   <:  g:
//│ {a: 'a} & G['a] as 'a

