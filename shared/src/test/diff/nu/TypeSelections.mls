:NewDefs


:ge // TODO
module M {
  type T = int -> int
  class C(n: int)
  fun mkC = C
}
//│ module M() {
//│   class C(n: int)
//│   type T = int -> int
//│   fun mkC: (n: int,) -> C
//│ }
//│ Code generation encountered an error:
//│   unresolved symbol C

let x: M.T = id
//│ let x: int -> int
//│ x
//│   = [Function: id]

fun foo(x: M.C) = x
//│ fun foo: (x: C,) -> C

:re // TODO
foo(M.mkC(42))
//│ C
//│ res
//│ Runtime error:
//│   ReferenceError: M is not defined


:e
42 : M.mkC
//│ ╔══[ERROR] Illegal selection of value member in type position
//│ ║  l.35: 	42 : M.mkC
//│ ╙──      	      ^^^^
//│ error
//│ res
//│     = 42


